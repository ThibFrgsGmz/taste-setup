#!/usr/bin/python3

"""
TASTE Concurrency View patcher

Applies the refined properties user set in ConcurrencyView_Properties.aadl
to the concurrency view generated by kazoo.

Contains thread priorities, stack sizes and dispatch offsets
"""
import os
import re
import sys

def usage():
        print ("Usage: taste-patch-cv-properties /path/to/system.aadl "
                "/path/to/ConcurrencyView_Properties.aadl")

def main():
    try:
        cvfile    = sys.argv[1]
        patchfile = sys.argv[2]
    except IndexError:
        patchfile = "ConcurrencyView_Properties.aadl"
        cvfile    = "system.aadl"

    if not cvfile.endswith("system.aadl") \
            or not patchfile.endswith("ConcurrencyView_Properties.aadl"):
        print ("Suspicious file names used...")
        usage()
        sys.exit(1)

    try:
        lines = open(patchfile, "r").readlines()
        cv = open (cvfile, "r").readlines()
    except FileNotFoundError:
        print ("File(s) not found")
        usage()
        sys.exit(1)

    patchlines = []
    patching = False
    for each in lines:
        if each.strip() == 'AI::root_system => "SELECTED";':
            patching = True
        elif each.strip() == "END DeploymentView.final;":
            patching = False
        elif patching == True:
            patchlines.append (each)

    patch_start = -1
    for lineNo, line in enumerate(cv):
        if "patchable area" in line:
            patch_start = lineNo + 1
        elif line.strip() == "end DeploymentView.final;":
            patch_end = lineNo
            break
    else:
        patch_start = -1
    if patch_start == -1:
        print ("[ERROR] no patchable area found in Concurrency View")
    if patchlines:
        result = cv[0:patch_start] + patchlines + cv[patch_end:-1]
    else:
        result = cv
    # rewrite the concurrency view:
    with open (cvfile, "w") as f:
        f.write("".join(result))
    #print ("".join(result))


if __name__ == "__main__":
    main()

